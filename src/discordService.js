const axios = require('axios')
const { DISCORD_WEBHOOK_URL, IS_DISCORD_ENABLED } = require('./config')

const username = 'Tuan Trading Bot'

// T·∫°o Embed message cho t√≠n hi·ªáu giao d·ªãch
function createSignalEmbed(signal) {
  const futures = signal.futuresDetails || {}
  return {
    title: `T√≠n hi·ªáu: ${signal.symbol}`,
    description:
      `**H√†nh ƒë·ªông:** ${futures.direction}\n` +
      `**ƒê·ªô m·∫°nh t√≠n hi·ªáu:** ${signal.strength}\n` +
      `**Gi√° hi·ªán t·∫°i:** ${signal.price}\n` +
      `**Chi·∫øn l∆∞·ª£c:** ${signal.strategy}\n`,
    timestamp: new Date().toISOString(),
    footer: {
      text: 'Crypto Trading Bot',
    },
  }
}

// G·ª≠i t√≠n hi·ªáu d∆∞·ªõi d·∫°ng Embed message qua Webhook
async function sendDiscordSignalMessage(signal) {
  if (IS_DISCORD_ENABLED !== 'true') return

  try {
    const embed = createSignalEmbed(signal)

    const payload = {
      username,
      embeds: [embed],
    }

    await axios.post(DISCORD_WEBHOOK_URL, payload)
  } catch (error) {
    console.error('üö® L·ªói g·ª≠i t√≠n hi·ªáu Discord:', error.message)
  }
}

// G·ª≠i tin nh·∫Øn text th√¥ng th∆∞·ªùng qua Webhook
async function sendDiscordMessage(message) {
  if (IS_DISCORD_ENABLED !== 'true') return

  try {
    const payload = {
      username,
      content: message,
    }

    await axios.post(DISCORD_WEBHOOK_URL, payload)
  } catch (error) {
    console.error('üö® L·ªói g·ª≠i tin nh·∫Øn Discord:', error.message)
  }
}

// Webhook kh√¥ng c·∫ßn "check connection" nh∆∞ bot client n√™n ta c√≥ th·ªÉ ƒë∆°n gi·∫£n h√≥a
async function checkDiscordConnection() {
  if (IS_DISCORD_ENABLED !== 'true') return false

  try {
    await axios.post(DISCORD_WEBHOOK_URL, {
      username,
      content: 'ü§ñ Webhook Discord ƒë√£ ƒë∆∞·ª£c k·∫øt n·ªëi th√†nh c√¥ng!',
    })

    console.log('‚úÖ ƒê√£ k·∫øt n·ªëi Discord Webhook th√†nh c√¥ng!')
    return true
  } catch (error) {
    console.error('üö® L·ªói k·∫øt n·ªëi Discord Webhook:', error.message)
    return false
  }
}

module.exports = {
  sendDiscordSignalMessage,
  sendDiscordMessage,
  checkDiscordConnection,
}
